name: Build and Push Docker Images

on:
  workflow_dispatch:
    inputs: 
      build_image:
        type: string
        description: "frontend, backend, Inventory or all"
      restart_services:
        type: boolean
        description: "Restart ecs services FE, BE, Inventory"
  # push:
  #   branches:
  #     - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push frontend Docker image
        if: ${{inputs.build_image}} == "frontend" || ${{inputs.build_image}} == "all"
        run: |
          docker build -t frontend ./ecom/frontend
          docker tag frontend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:latest
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build and push backend Docker image
        if: ${{inputs.build_image}} == "backend" || ${{inputs.build_image}} == "all"
        run: |
          docker build -t backend ./ecom/backend
          docker tag backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/backend:latest
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build and push inventory Docker image
        if: ${{inputs.build_image}} == "inventory" || ${{inputs.build_image}} == "all"
        run: |
          docker build -t inventory ./ecom/inventory
          docker tag inventory:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/inventory:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/inventory:latest
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # Add steps to update ECS task definitions and restart services
      - name: Update ECS task definitions and restart services
        if: ${{inputs.restart_services}} == "true" 
        run: |
          aws ecs update-service --cluster ecs-cluster --service frontend --force-new-deployment
          aws ecs update-service --cluster ecs-cluster --service backend --force-new-deployment
          aws ecs update-service --cluster ecs-cluster --service inventory --force-new-deployment
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
